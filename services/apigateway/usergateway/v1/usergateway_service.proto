syntax = "proto3";

package usergateway.v1;

option go_package = "github.com/dietzy1/chatapp/services/apigateway/usergateway/v1;usergatewayv1";


import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

// These annotations are used when generating the OpenAPI file.
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {version: "1.0"};
    external_docs: {
      url: "https://github.com/dietzy1/Microservice-Chat-App";
      description: "Backend GRPC chatapp microservice";
    }
    schemes: HTTPS;
};


service UserGatewayService {
rpc GetUser (GetUserRequest) returns (GetUserResponse) {}
rpc EditDescription (EditDescriptionRequest) returns (EditDescriptionResponse) {}
rpc ChangeAvatar (ChangeAvatarRequest) returns (ChangeAvatarResponse) {}
rpc GetAvatars (GetAvatarsRequest) returns (GetAvatarsResponse) {}
}

message GetUserRequest {
	string user_uuid = 1;
}

message GetUserResponse {
	string name = 1;
	string uuid = 2;
	Icon icon = 3;
	string description = 4;
	string join_date = 5;
	repeated string chat_servers = 6;
}

message EditDescriptionRequest {
	string user_uuid = 1;
	string description = 2;
}

message EditDescriptionResponse {
}


message ChangeAvatarRequest {
    string user_uuid = 1;
    string icon_uuid = 2;
}

message ChangeAvatarResponse {

}


message GetAvatarsRequest {
}

message GetAvatarsResponse {
	repeated Icon icons = 1;
}

message Icon {
	string link = 1;
	string uuid = 2;
}


/* service UserGatewayService1 {
rpc ChangeAvatar (ChangeAvatarRequest) returns (ChangeAvatarResponse) {
    option (google.api.http) = {
        post: "/v1/user/changeavatar",
        body: "*",
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            summary: "Change the avatar of a user"
            description: "GRPC gateway call to change the avatar of a user."
            tags: "User"
        };
    }

rpc ChangeUsername (ChangeUsernameRequest) returns (ChangeUsernameResponse) {
    option (google.api.http) = {
        post: "/v1/user/changeusername",
        body: "*",
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            summary: "Change the username of a user"
            description: "GRPC gateway call to change the username of a user."
                        tags: "User"
        };
    }
rpc ChangePassword (ChangePasswordRequest) returns (ChangePasswordResponse) {
    option (google.api.http) = {
        post: "/v1/user/changepassword",
        body: "*",
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            summary: "Change the password of a user"
            description: "GRPC gateway call to change the password of a user."
                        tags: "User"
        };
    }    
} */
