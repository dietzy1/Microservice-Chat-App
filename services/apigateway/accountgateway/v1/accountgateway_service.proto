syntax = "proto3";

package accountgateway.v1;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/dietzy1/chatapp/services/apigateway/accountgateway/v1;accountgatewayv1";
// These annotations are used when generating the OpenAPI file.
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {version: "1.0"};
  external_docs: {
    url: "https://github.com/dietzy1/Microservice-Chat-App";
    description: "Backend GRPC chatapp microservice";
  }
  schemes: HTTPS;
};

service AccountGatewayService {
  //External RPC
  rpc ChangeUsername(ChangeUsernameRequest) returns (ChangeUsernameResponse) {
    option (google.api.http) = {
      post: "/accountgateway.v1.AccountGatewayService/ChangeUsername"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Account";
      summary: "Change username";
      description: "Change username";
    };
  }
  rpc ChangePassword(ChangePasswordRequest) returns (ChangePasswordResponse) {
    option (google.api.http) = {
      post: "/accountgateway.v1.AccountGatewayService/ChangePassword"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Account";
      summary: "Change password";
      description: "Change password";
    };
  }
  rpc DeleteAccount(DeleteAccountRequest) returns (DeleteAccountResponse) {
    option (google.api.http) = {
      post: "/accountgateway.v1.AccountGatewayService/DeleteAccount"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Account";
      summary: "Delete account";
      description: "Delete account";
    };
  }

  rpc RegisterAccount(RegisterAccountRequest) returns (RegisterAccountResponse) {
    option (google.api.http) = {
      post: "/accountgateway.v1.AccountGatewayService/RegisterAccount"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Account";
      summary: "Register account";
      description: "Register account";
    };
  }

  rpc DemoUserRegister(DemoUserRegisterRequest) returns (DemoUserRegisterResponse) {
    option (google.api.http) = {
      post: "/accountgateway.v1.AccountGatewayService/DemoUserRegister"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Account";
      summary: "Register demo user";
      description: "Register demo user";
    };
  }

  rpc UpgradeDemoUser(UpgradeDemoUserRequest) returns (UpgradeDemoUserResponse) {
    option (google.api.http) = {
      post: "/accountgateway.v1.AccountGatewayService/UpgradeDemoUser"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Account";
      summary: "Upgrade demo user";
      description: "Upgrade demo user";
    };
  }
}

message ChangeUsernameRequest {
  string user_uuid = 1;
  string username = 2;
}

message ChangeUsernameResponse {}

message ChangePasswordRequest {
  string user_uuid = 1;
  string password = 2;
  string new_password = 3;
}

message ChangePasswordResponse {}

message DeleteAccountRequest {
  string user_uuid = 1;
  string password = 2;
}

message DeleteAccountResponse {}

message RegisterAccountRequest {
  string username = 1;
  string password = 2;
}

message RegisterAccountResponse {
  string session = 1;
  string user_uuid = 2;
}

message DemoUserRegisterRequest {}

message DemoUserRegisterResponse {
  string session = 1;
  string user_uuid = 2;
}

message UpgradeDemoUserRequest {
  string user_uuid = 1;
  string username = 2;
  string password = 3;
}

message UpgradeDemoUserResponse {}
