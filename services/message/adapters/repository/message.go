package repository

import (
	"context"
	"log"

	"github.com/dietzy1/chatapp/services/message/domain"
	"go.mongodb.org/mongo-driver/bson"
	"go.mongodb.org/mongo-driver/mongo/options"
)

const database = "Message-Database"

// TODO: Verify validaty
func (a *Db) GetMessages(ctx context.Context, chatroomUuid string, channelUuid string) ([]domain.Message, error) {
	collection := a.client.Database(database).Collection(chatroomUuid)

	messages := []domain.Message{}
	//Find latest 10 messages
	opts := options.Find().SetLimit(50)

	//I need to look into the collection and find the latests messages that matches the channel uuid
	log.Println("channelUuid: ", channelUuid)

	cursor, err := collection.Find(ctx, bson.M{"channeluuid": channelUuid}, opts)
	if err != nil {
		return messages, err
	}

	if err = cursor.All(ctx, &messages); err != nil {
		return messages, err
	}
	log.Println(messages)

	return messages, nil

}

// TODO:
func (a *Db) AddMessage(ctx context.Context, msg domain.Message) error {
	collection := a.client.Database(database).Collection(msg.ChatRoomUuid)
	_, err := collection.InsertOne(ctx, msg)
	if err != nil {
		return err
	}

	return nil
}

// TODO:
// This is probaly incorrect needs to be fixed
func (a *Db) UpdateMessage(ctx context.Context, msg domain.Message) error {
	collection := a.client.Database(database).Collection(msg.ChatRoomUuid)
	_, err := collection.UpdateOne(ctx, bson.M{"messageUuid": msg.MessageUuid}, bson.M{"$set": msg})
	if err != nil {
		return err
	}

	return nil
}

// TODO:
// Autogenerated need to validate that it actually is correct code5
func (a *Db) DeleteMessage(ctx context.Context, msg domain.Message) error {
	collection := a.client.Database(database).Collection(msg.ChatRoomUuid)
	_, err := collection.DeleteOne(ctx, bson.M{"messageUuid": msg.MessageUuid})
	if err != nil {
		return err
	}
	return nil
}
