syntax = "proto3";

package chatroom.v1;

option go_package = "github.com/dietzy1/chatapp/services/chatroom/proto/chatroom/v1;chatroomv1";

service ChatroomService {
    rpc CreateRoom(CreateRoomRequest) returns (CreateRoomResponse) {}
    rpc DeleteRoom(DeleteRoomRequest) returns (DeleteRoomResponse) {}
    rpc GetRoom(GetRoomRequest) returns (GetRoomResponse) {}

 /*    rpc CreateChannel(CreateChannelRequest) returns (CreateChannelResponse) {}
    rpc DeleteChannel(DeleteChannelRequest) returns (DeleteChannelResponse) {}
    rpc GetChannel(GetChannelRequest) returns (GetChannelResponse) {}

    rpc ChangeRoomName(ChangeRoomNameRequest) returns (ChangeRoomNameResponse) {}
    rpc ChangeRoomDescription(ChangeRoomDescriptionRequest) returns (ChangeRoomDescriptionResponse) {}
    rpc ChangeRoomIcon(ChangeRoomIconRequest) returns (ChangeRoomIconResponse) {}

    rpc InviteUser(InviteUserRequest) returns (InviteUserResponse) {}
    rpc RemoveUser(RemoveUserRequest) returns (RemoveUserResponse) {}
    rpc AddUser(AddUserRequest) returns (AddUserRequest) {} */

}

message CreateRoomRequest {
    string name = 1;
    string description = 2;
    string owner_uuid = 3;
}

message CreateRoomResponse {
   
}


/* type Chatroom struct {
	Users       []string `json:"users" bson:"users"`
	Uuid        string   `json:"uuid" bson:"uuid"`
	Name        string   `json:"name" bson:"name"`
	Icon        Icon     `json:"icon" bson:"icon"`
	Owner       string   `json:"owner" bson:"owner"`
	Description string   `json:"description" bson:"description"`
} */



